@model Covid19Testing.ViewModels.LabTestDetailsViewModel

@{
    ViewData["Title"] = "Create";
}

<h2>COVID-19 TESTING FORM</h2>

<div align="right">
    <a asp-action="Index" asp-controller="Biodata">
        Biodata Search Page
    </a>
</div>

<h4>Biodata</h4>


<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.BioData.Fullname)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.Fullname)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.LegalGardianName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.LegalGardianName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.Dateofbirth)
        </dt>
        <dd>
            @Model.BioData.Dateofbirth.ToString("dd/MMM/yy")
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.GenderNavigation.Gender)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.GenderNavigation.Gender)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.EpidNo)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.EpidNo)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.LocalPhone)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.LocalPhone)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.HomePhone)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.HomePhone)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.ResidentialAddress)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.ResidentialAddress)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.InsertTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.InsertTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.InsertBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.InsertBy)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.UpdateTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.UpdateTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.UpdateBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.UpdateBy)
        </dd>

    </dl>
</div>




<h4>Test</h4>
<hr />
<div class="row">
    <div class="col-md-4">



        <form asp-action="Create">

            <input asp-for="@Model.BioData.Id" class="form-control" type="hidden" />
            <input asp-for="@Model.BioData.Fullname" class="form-control" type="hidden" />
            <input asp-for="@Model.BioData.LegalGardianName" class="form-control" type="hidden" />
            <input asp-for="@Model.BioData.Dateofbirth" class="form-control" type="hidden" />
            <input asp-for="@Model.BioData.Gender" class="form-control" type="hidden" />
            <input asp-for="@Model.BioData.EpidNo" class="form-control" type="hidden" />
            <input asp-for="@Model.BioData.LocalPhone" class="form-control" type="hidden" />
            <input asp-for="@Model.BioData.HomePhone" class="form-control" type="hidden" />
            <input asp-for="@Model.BioData.ResidentialAddress" class="form-control" type="hidden" />

            <input asp-for="@Model.LabTest.Biodata" class="form-control" type="hidden" />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="@Model.LabTest.Method" class="control-label"></label>
                <select asp-for="@Model.LabTest.Method" class="form-control" asp-items="ViewBag.Method">
                    <option value="">[Select Method]</option>
                </select>
                <span asp-validation-for="@Model.LabTest.Method" class="text-danger"></span>
            </div>

            <div class="form-group" id="LabTestIndicators">



            </div>

            <div class="form-group">
                <label asp-for="@Model.LabTest.TestingDate" class="control-label"></label>
                <input asp-for="@Model.LabTest.TestingDate" class="form-control" type="date" />
                <span asp-validation-for="@Model.LabTest.TestingDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.LabTest.TestingTime" class="control-label"></label>
                <input asp-for="@Model.LabTest.TestingTime" class="form-control" type="time" />
                <span asp-validation-for="@Model.LabTest.TestingTime" class="text-danger"></span>
            </div>

            <div class="form-group">

                <input asp-for="@Model.LabTest.Interpretation" value="97" class="form-control" type="hidden" />

                <label asp-for="@Model.LabTest.Interpretation" class="control-label"></label>
                <select asp-for="@Model.LabTest.Interpretation" class="form-control" asp-items="ViewBag.Results" disabled>
                    <option value="97">NO RESULT</option>
                </select>

            </div>



            <hr />



            @{

                string style = "display: none";

                if (User.IsInRole("dataapprover"))
                {
                    style = "";
                }

            }


            <div style="@style">

                <h4 align="center">OFFICIAL USE ONLY</h4>


                <table>

                    @for (int i = 0; i < Model.Specimen.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(m => m.Specimen[i].Specimen)
                                @Html.HiddenFor(m => m.Specimen[i].SpecimenName)
                                @Html.DisplayFor(m => m.Specimen[i].SpecimenName)
                            </td>
                            <td>

                                @if (Model.Specimen[i].Specimen == 99)
                                {
                                    @Html.CheckBoxFor(m => m.Specimen[i].Checked, new { @class = "specimen_checkbox" })
                                }
                                else
                                {
                                    @Html.CheckBoxFor(m => m.Specimen[i].Checked)
                                }

                                @*<input asp-for="InsertTime" class="form-control" />
                        <span asp-validation-for="InsertTime" class="text-danger"></span>*@
                            </td>
                        </tr>

                    }

                    <tr>
                        <td colspan="2">
                            <div id="specimen_other">

                            </div>
                        </td>
                    </tr>

                </table>

            </div>




            <br />

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>


    </div>
</div>




@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {

            $('.specimen_checkbox').click(function () {
                if ($(this).is(':checked')) {
                    var position = $(this).data("position");
                    var divSpecimen = $("#specimen_other");
                    divSpecimen.empty();

                    var input = `<label class="control-label" >Specify</label>
                                            <input name="Specimen[`+ position + `].SpecimenOther" id="Specimen_` + position + `__SpecimenOther" class="form-control" type="text"/>
                                            <span class="text-danger field-validation-valid" data-valmsg-for="Specimen[`+ position + `].SpecimenOther" data-valmsg-replace="true"></span>`;

                    divSpecimen.append(input);

                }
                else {
                    var divSpecimen = $("#specimen_other");
                    divSpecimen.empty();
                }
            });

            $('#LabTest_Method').change(function () {
                var m = $(this).val();

                if (m)
                {
                    //do ajax
                    $.ajax({
                        url: '@Url.Action("GetLabTestIndicators", "LabTests")',
                        dataType: 'json',
                        async: false,
                        type: 'POST',
                         data: { _method: m },
                        success: function (data) {
                            if (data.IsSuccessful) {
                                //alert(data.JSONData);
                                indicators = JSON.parse(data.JSONData);

                                var divIndicators = $("#LabTestIndicators");
                                divIndicators.empty();

                                if (indicators.length > 0) {
                                    $.each(indicators, function (i, e) {
                                        var input = `<div class="form-group">
                                            <input name="Indicators[` + i + `].Method" id="Indicators_` + i + `__Method" value="` + e.Method +`" type="hidden"/>
                                            <input name="Indicators[` + i + `].Indicator" id="Indicators_` + i + `__Indicator" value="` + e.Indicator + `" type="hidden"/>
                                            <label class="control-label">` + e.IndicatorName + `</label>
                                            <input name="Indicators[` + i + `].IndicatorValue" id="Indicators_` + i + `__IndicatorValue" type="decimal"  min="0" class="form-control" />
                                            <span asp-validation-for="Indicators_` + i + `__IndicatorValue" class="text-danger"></span>
                                            </div>`;

                                        divIndicators.append(input);
                                    });
                                }
                            }
                            else {
                                console.log(data.Message);
                            }
                        },
                        error: function (err) { console.log(JSON.stringify(err)); }
                    });

                }
            });

        });
    </script>
}


