@model Covid19Testing.ViewModels.LabTestDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

@using Covid19Testing.Utils

<h2>COVID-19 TESTING FORM</h2>

<div align="right">
    @if (Model.LabTest.Approved == null || !Model.LabTest.Approved.Value)
    {
        <a asp-action="Edit" asp-route-id="@Model.LabTest.Id">Edit</a>
        @Html.Raw("|")
    }
    <a asp-action="Index">COVID-19 TESTING RESULTs</a>


</div>


<div>
    <h4>Biodata</h4>
    <hr />
    @Html.HiddenFor(model => model.BioData.Email)
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.BioData.Fullname)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.Fullname)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.LegalGardianName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.LegalGardianName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.Dateofbirth)
        </dt>
        <dd>
            @Model.BioData.Dateofbirth.ToString("dd/MMM/yy")
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.GenderNavigation.Gender)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.GenderNavigation.Gender)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BioData.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BioData.EpidNo)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.EpidNo)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.LocalPhone)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.LocalPhone)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.HomePhone)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.HomePhone)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.ResidentialAddress)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.ResidentialAddress)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.InsertTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.InsertTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.InsertBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.InsertBy)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.UpdateTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.UpdateTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BioData.UpdateBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BioData.UpdateBy)
        </dd>

    </dl>
</div>

@{

    string style = "";

    if (Model.LabTest.Approved != null && Model.LabTest.Approved.Value)
    {
        style = "background: url('/Content/approved4.png') no-repeat right;background-size: contain;";
    }
}

<h4>Test</h4>
<hr />
<div class="row" style="@style">
    <div class="col-md-4">

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.LabTest.Method)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.LabTest.MethodNavigation.Methodname)
            </dd>

            @foreach (var i in Model.LabTest.TblLabTestsIndicatorsValues)
            {
                <dt>
                    @Html.DisplayFor(model => i.IndicatorName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => i.IndicatorValue)
                </dd>
            }

            <dt>
                @Html.DisplayNameFor(model => model.LabTest.TestingDate)
            </dt>
            <dd>
                @Utils.toShortdate(@Model.LabTest.TestingDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LabTest.TestingTime)
            </dt>
            <dd>
                @Utils.time12Hr(@Model.LabTest.TestingTime)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LabTest.Interpretation)
            </dt>
            <dd>
                @if (@Model.LabTest.Interpretation == 97)
                {
                    @Html.Raw("NO RESULT")
                }
                else if (@Model.LabTest.Interpretation == 1)
                {
                    @Html.Raw("POSITIVE")
                }
                else if (@Model.LabTest.Interpretation == 2)
                {
                    @Html.Raw("NEGATIVE")
                }
                else
                {
                    @Html.Raw("-")
                }
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LabTest.ReportingDate)
            </dt>
            <dd>
                @Utils.toShortdate(@Model.LabTest.ReportingDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LabTest.ReportingTime)
            </dt>
            <dd>
                @Utils.time12Hr(@Model.LabTest.ReportingTime)

            </dd>

        </dl>


        <hr />
        <h4 align="center">OFFICIAL USE ONLY</h4>

        <table>
            @foreach (var s in @Model.Specimen)
            {
                <tr>
                    <td>
                        <label class="control-label">@s.SpecimenName</label>
                    </td>
                    <td> @Html.CheckBoxFor(model => s.Checked, new { @disabled = "disabled" })</td>
                    <td>

                        @if (s.Checked && s.Specimen == 99)
                        {
                            <label class="control-label">Specify:</label>

                            @Html.DisplayFor(model => s.SpecimenOther)

                        }

                    </td>
                </tr>




            }
        </table>



    </div>
</div>

<div align="right">

    @if (ViewBag.Ready && Model.LabTest.Approved)
    {
        <hr />
        <label class="control-label">Download the Candidate's Covid19 Test Result.</label>

        <form asp-action="GenerateDocument" method="get">
            <input type="hidden" name="Id" value="@Model.LabTest.Id" />
            <input type="submit" value="Download Result" class="btn btn-default" />
        </form>

        <hr />
        @*<form asp-action="ShareDocument" method="get">*@

        @if (Model.LabTest.SentEmailTime == null)
        {
            <label class="control-label">Candidate has not been notified yet.</label>
        }
        else
        {
            <label class="control-label">Last email sent on: @Model.LabTest.SentEmailTime</label>
        }
        @*<input type="hidden" name="Id" value="@Model.LabTest.Id" />*@
        <div class="form-group">
            @*<input type="submit" value="Notify Candidate" class="btn btn-default" />*@
            <input type="submit" value="Notify Candidate" onclick="notifyCandidate(@Model.LabTest.Id)" class="btn btn-default" />
        </div>

    }
    else if (ViewBag.Ready && !Model.LabTest.Approved)
    {
        @*<form asp-action="ApproveResult" method="get">
            <input type="hidden" name="Id" value="@Model.LabTest.Id" />*@
        <input type="submit" value="Approve Result" onclick="approveResult(@Model.LabTest.Id)" class="btn btn-default" />
        @*</form>*@
    }


</div>

<partial name="~/ModalPartialViews/_Wait.cshtml" />
<partial name="~/ModalPartialViews/_Confirm.cshtml" />
<partial name="~/ModalPartialViews/_Alert.cshtml" />
<partial name="~/ModalPartialViews/_Input.cshtml" />


<script>

    //function notifyCandidateThroughEmail(testid, email) {

 
        

    //}

    function notifyCandidateThroughEmail(testid, email) {


        $.ajax({
                type: "POST",
                url: '@Url.Action("ShareDocument", "LabTests")',
                data: { Id: testid, emails: email},
                dataType: 'json',
                success: function (data) {
                    if (data.IsSuccessful) {

                        alert_modal("Covid19 Test Result sent.", function () {
                            location.reload();
                        });

                    } else {
                        alert_modal(data.Message);
                    }
                },
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                }
            });

    }

    function notifyCandidate(testid) {
        var email = $("#BioData_Email").val();

        if (!email) {
            input_modal("Send Covid19 Test result to candidate's Email.", "Enter Email Address", function () {
                notifyCandidateThroughEmail(testid, $inputModalVal);
            }, "^[a-zA-Z0-9+_.-]{2,20}@('@')[a-zA-Z0-9+_.-]{2,20}[.][[a-zA-Z0-9]{2,5}$", "Not a valid email address!");
        } else {
            notifyCandidateThroughEmail(testid, email);
        }

    }

    function approveResult(testid) {

        confirm_modal("Confirm Covid19 test result", function () {

            $.ajax({
                type: "POST",
                url: '@Url.Action("ApproveResult", "LabTests")',
                data: { Id: testid },
                dataType: 'json',
                success: function (data) {
                    if (data.IsSuccessful) {

                        alert_modal("Covid19 Test Result Approved.", function () {
                            location.reload();
                        });

                    } else {
                        console.log(data.Message);
                    }
                },
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                }
            });




        });
    }

</script>

